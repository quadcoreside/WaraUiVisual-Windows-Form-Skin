<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="C:\Users\admin\Documents\Visual Studio 2017\Projects\WaraUiVisual\bin\Debug\WaraUiDraw.dll">
   <Modules>
    <Module Name="warauidraw.dll">
     <Namespaces>
      <Namespace Name="WaraUi">
       <Types>
        <Type Name="ColorScheme" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implémenter IDisposable sur 'ColorScheme' car il crée des membres des types IDisposable suivants : 'Pen', 'SolidBrush'. Si 'ColorScheme' existait précédemment, le fait d'ajouter de nouveaux membres qui implémentent IDisposable pour ce type est considéré comme une modification avec rupture pour les utilisateurs existants.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WaraSkinManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implémenter IDisposable sur 'WaraSkinManager' car il crée des membres des types IDisposable suivants : 'SolidBrush', 'PrivateFontCollection', 'Font'. Si 'WaraSkinManager' existait précédemment, le fait d'ajouter de nouveaux membres qui implémentent IDisposable pour ce type est considéré comme une modification avec rupture pour les utilisateurs existants.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddFontMemResourceEx(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraSkinManager.AddFontMemResourceEx(IntPtr, uint, IntPtr, ref uint)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WaraUi.Controls">
       <Types>
        <Type Name="WaraForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMonitorInfo(System.Runtime.InteropServices.HandleRef,WaraUi.Controls.WaraForm+MONITORINFOEX)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.GetMonitorInfo(HandleRef, WaraForm.MONITORINFOEX)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.GetMonitorInfo(HandleRef, WaraForm.MONITORINFOEX)' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemMenu(System.IntPtr,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.GetSystemMenu(IntPtr, bool)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.GetSystemMenu(IntPtr, bool)' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonitorFromWindow(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.MonitorFromWindow(IntPtr, uint)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.MonitorFromWindow(IntPtr, uint)' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReleaseCapture()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.ReleaseCapture()' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.ReleaseCapture()' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.SendMessage(IntPtr, int, int, int)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">Tel qu'il est déclaré dans votre code, le paramètre 'wParam' de P/Invoke 'WaraForm.SendMessage(IntPtr, int, int, int)' aura une largeur de 4 octets sur les plateformes 64 bits. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de 8 octets sur les plateformes 64 bits. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de 'int'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">Tel qu'il est déclaré dans votre code, le paramètre 'lParam' de P/Invoke 'WaraForm.SendMessage(IntPtr, int, int, int)' aura une largeur de 4 octets sur les plateformes 64 bits. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de 8 octets sur les plateformes 64 bits. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de 'int'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Error">Tel qu'il est déclaré dans votre code, le type de retour de P/Invoke 'WaraForm.SendMessage(IntPtr, int, int, int)' aura une largeur de 4 octets sur les plateformes 64 bits. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de 8 octets sur les plateformes 64 bits. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de 'int'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.SendMessage(IntPtr, int, int, int)' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrackPopupMenuEx(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraForm.TrackPopupMenuEx(IntPtr, uint, int, int, IntPtr, IntPtr)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Modifiez l'accessibilité de P/Invoke 'WaraForm.TrackPopupMenuEx(IntPtr, uint, int, int, IntPtr, IntPtr)' afin qu'il ne soit plus visible hors de son assembly.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaraSingleLineTextField" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HelpRequested" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error" Path="C:\Users\admin\Documents\Visual Studio 2017\Projects\WaraUiVisual\Controles" File="WaraSingleLineTextField.cs" Line="402">Déclarez le second paramètre de 'HelpEventHandler' en tant que EventArgs, ou une instance d'un type qui étend EventArgs, nommée 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaraSingleLineTextField+BaseTextBox" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#SendMessage(System.IntPtr,System.Int32,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Étant donné qu'il s'agit d'une méthode P/Invoke, 'WaraSingleLineTextField.BaseTextBox.SendMessage(IntPtr, int, int, string)' doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">Tel qu'il est déclaré dans votre code, le paramètre 'wParam' de P/Invoke 'WaraSingleLineTextField.BaseTextBox.SendMessage(IntPtr, int, int, string)' aura une largeur de 4 octets sur les plateformes 64 bits. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de 8 octets sur les plateformes 64 bits. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de 'int'.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">Pour garantir votre sécurité, marshalez le paramètre 'lParam' comme Unicode, en définissant DllImport.CharSet à CharSet.Unicode, ou en marshalant explicitement le paramètre comme UnmanagedType.LPWStr. Si vous devez marshaler cette chaîne comme ANSI ou comme dépendante du système, définissez BestFitMapping=false ; pour une sécurité accrue, définissez aussi ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WaraToolStripMenuItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-01-07 12:10:32Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\admin\Documents\Visual Studio 2017\Projects\WaraUiVisual\Controles" File="WaraContextMenuStrip.cs" Line="76">'WaraToolStripMenuItem.WaraToolStripMenuItem()' contient une chaîne d'appel aboutissant à un appel vers une méthode virtuelle définie par la classe. Vérifiez le parcours de pile suivant et analysez-y toutes les conséquences imprévisibles : &#xD;&#xA;&#xD;&#xA;WaraToolStripMenuItem..ctor()&#xD;&#xA;ToolStripItem.set_AutoSize(Boolean):Void&#xD;&#xA;ToolStripItem.set_Size(Size):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WaraUi.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-01-07 12:10:32Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Évitez le recours à du code privé non appelé</Name>
   <Description>Il existe du code non appelé qui n'est pas visible de l'extérieur et ne constitue pas un point d'entrée connu du runtime. Si cette violation provoque une erreur, signalez le problème à l'équipe Visual Studio Code Analysis.</Description>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Déclarer les gestionnaires d'événements correctement</Name>
   <Description>Par convention, les événements .NET possèdent deux paramètres qui spécifient l'émetteur d'événement et les données d'événement. Les signatures du gestionnaire d'événements doivent suivre ce format : void MyEventHandler(object sender, EventArgs e). Le paramètre 'sender' est toujours du type System.Object, même s'il est possible d'employer un type plus spécifique. Le paramètre 'e' est toujours du type System.EventArgs. Les événements qui ne fournissent pas de données d'événement doivent utiliser le type délégué System.EventHandler. Les gestionnaires d'événements retournent void afin qu'ils puissent envoyer chaque événement à plusieurs méthodes cibles. Les valeurs retournées par une cible sont perdues après le premier appel.</Description>
   <Resolution Name="Second">Déclarez le second paramètre de {0} en tant que EventArgs, ou une instance d'un type qui étend EventArgs, nommée 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>N'appelez pas de méthodes substituables dans les constructeurs</Name>
   <Description>Vous ne devez pas appeler des méthodes virtuelles définies dans la classe à partir de constructeurs. Si une classe dérivée a remplacé la méthode, la version de la classe dérivée est appelée (avant le constructeur de classe dérivée).</Description>
   <Resolution Name="Default">{0} contient une chaîne d'appel aboutissant à un appel vers une méthode virtuelle définie par la classe. Vérifiez le parcours de pile suivant et analysez-y toutes les conséquences imprévisibles : {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Déplacer les P/Invoke vers une classe NativeMethods</Name>
   <Description>Ce type contient des membres dotés de l'attribut DllImport. Les membres dotés de l'attribut DllImport doivent être contenus dans les classes nommées NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Étant donné qu'il s'agit d'une méthode P/Invoke, {0} doit être défini dans une classe nommée NativeMethods, SafeNativeMethods ou UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>Les déclarations P/Invoke doivent être portables</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">Tel qu'il est déclaré dans votre code, le paramètre {0} de P/Invoke {1} aura une largeur de {2} octets sur les plateformes {3}. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de {4} octets sur les plateformes {3}. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de {5}.</Resolution>
   <Resolution Name="Return">Tel qu'il est déclaré dans votre code, le type de retour de P/Invoke {0} aura une largeur de {1} octets sur les plateformes {2}. Cela n'est pas correct, car la déclaration native réelle de cette API indique qu'elle doit avoir une largeur de {3} octets sur les plateformes {2}. Consultez la documentation du Kit de développement Platform SDK de MSDN pour obtenir de l'aide sur le choix du type de données à utiliser à la place de {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>Les P/Invoke ne doivent pas être visibles</Name>
   <Description>La couche d'interopérabilité ne doit pas être publique. L'attribut DllImport ne doit pas être appliqué aux membres accessibles publiquement (publics ou protégés).</Description>
   <Resolution Name="Default">Modifiez l'accessibilité de P/Invoke {0} afin qu'il ne soit plus visible hors de son assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Spécifiez le marshaling pour les arguments de chaîne P/Invoke</Name>
   <Description>Lors du marshaling de chaînes comme chaînes ANSI (ou comme chaînes automatiques sur Win9x), il se peut que certains caractères soient modifiés. Si le mappage ajusté est activé, les chaînes qui apparaissent différentes en Unicode seront marshalés en chaînes ANSI identiques, ce qui peut conduire à des décisions de sécurité incorrectes. La désactivation du mappage ajusté réduit un tel risque, car tous les caractères sans équivalents sont mappés à '?'. Notez également que CharSet.Ansi constitue le paramètre par défaut pour tout marshaling de chaînes ; le marshaling Unicode doit être spécifié explicitement, comme paramètre CharSet de DllImport ou StructLayout, ou comme attribut MarshalAs avec un UnmanagedType Unicode (ou dépendant du système).</Description>
   <Resolution Name="Parameter">Pour garantir votre sécurité, marshalez le paramètre {0} comme Unicode, en définissant DllImport.CharSet à CharSet.Unicode, ou en marshalant explicitement le paramètre comme UnmanagedType.LPWStr. Si vous devez marshaler cette chaîne comme ANSI ou comme dépendante du système, définissez BestFitMapping=false ; pour une sécurité accrue, définissez aussi ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Les types qui possèdent des champs supprimables doivent être supprimables</Name>
   <Description>Les types qui déclarent des membres supprimables doivent également implémenter IDisposable. Si le type ne possède aucune ressource non managée, n'implémentez pas de finaliseur sur celui-ci.</Description>
   <Resolution Name="DependsOnFix">Implémenter IDisposable sur {0} car il crée des membres des types IDisposable suivants : {1}. Si {0} existait précédemment, le fait d'ajouter de nouveaux membres qui implémentent IDisposable pour ce type est considéré comme une modification avec rupture pour les utilisateurs existants.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Catégorie</String>
  <String Key="Certainty">Certitude</String>
  <String Key="CollapseAll">Réduire tout</String>
  <String Key="CheckId">ID de contrôle</String>
  <String Key="Error">Erreur</String>
  <String Key="Errors">erreur(s)</String>
  <String Key="ExpandAll">Développer tout</String>
  <String Key="Help">Aide</String>
  <String Key="Line">Ligne</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Emplacement non stocké dans le fichier Pdb]</String>
  <String Key="Project">Projet</String>
  <String Key="Resolution">Résolution</String>
  <String Key="Rule">Règle</String>
  <String Key="RuleFile">Fichier de règles</String>
  <String Key="RuleDescription">Description de la règle</String>
  <String Key="Source">Source</String>
  <String Key="Status">État</String>
  <String Key="Target">Cible</String>
  <String Key="Warning">Avertissement</String>
  <String Key="Warnings">avertissement(s)</String>
  <String Key="ReportTitle">Rapport d'analyse du code</String>
 </Localized>
</FxCopReport>
